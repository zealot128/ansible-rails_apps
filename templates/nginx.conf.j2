# {{ ansible_managed }}

server {
  listen   80;
  server_name {{ item.domain }};

  {% if item.ssl_cert is defined %}
  listen  443 ssl;
  ssl_certificate /etc/nginx/cert/{{item.name}}.crt;
  ssl_certificate_key /etc/nginx/cert/{{item.name}}.key;
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;
  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /etc/nginx/cert/dhparam.pem;
  # enables server-side protection from BEAST attacks
  # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
  ssl_prefer_server_ciphers on;
  # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  # ciphers chosen for forward secrecy and compatibility

  # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html

  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping

  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  {% endif %}

  gzip on;
  client_max_body_size 200M;
  {% if item.path %}
  root {{item.path}}/current/public;
  {% endif %}

  {% if item.nginx_extra %}
  {{item.nginx_extra}}
  {% endif %}

  {% if item.ruby is defined %}
  passenger_enabled on;
  passenger_ruby {{item.ruby}};
  passenger_min_instances 5;
  # Preloader niemals ausschalten
  passenger_max_preloader_idle_time 0;
  {% endif %}

  # if ($host !~* ^www\.) {
  #   rewrite ^(.*)$ https://www.$host$1 permanent;
  # }

  location ~ ^/(assets)/ {
    expires 21d;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

}
